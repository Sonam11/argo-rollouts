apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: rollouts-demo-2
  namespace: argo-kapcom-test
spec:
  replicas: 5
  strategy:
    bluegreen:
      previewService: rollouts-demo-canary
      autoPromotionEnabled: false
      # Reference to a Service which the controller will update to point to the stable ReplicaSet
      activeService: rollouts-demo-stable
      trafficRouting:
        kapcom:
          # Reference to an Ingress which has a rule pointing to the stable service (e.g. rollouts-demo-stable)
          # This ingress will be cloned with a new name, in order to achieve NGINX traffic splitting.
          ingress: argo-kapcom
          servicePort: 80
      steps:
      - setWeight: 20
      - pause: {}
      - experiment:
          duration: 5m
          templates:
          - name: baseline
            specRef: stable
          - name: canary
            specRef: canary
          analyses:
          - name : mann-whitney
            templateName: mann-whitney
            args:
            - name: stable-hash
              valueFrom:
                podTemplateHashValue: Stable
            - name: canary-hash
              valueFrom:
                podTemplateHashValue: Latest
            - name: start-time
              value: 2021-03-31T13:50:25+0000
            - name: end-time
              value: 2021-03-31T13:50:25+0000 
      - setWeight: 40
      - pause: {duration: 10}
      - setWeight: 60
      - pause: {duration: 10}
      - setWeight: 80
      - pause: {duration: 10}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rollouts-demo-2
  template:
    metadata:
      labels:
        app: rollouts-demo-2
    spec:
      containers:
      - name: rollouts-demo
        image: argoproj/rollouts-demo:blue
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            memory: 32Mi
            cpu: 5m
